a <- available.packages()
?head()
?head(rownames(a), 4)
head(rownames(a), 4)
library(ggplot2)
install.packages("ggplot2")
installed.packages()
search()
library(ggplot2)
search()
getwd()
dir()
setwd("~/projects/git/datasciencecoursera")
getwd()
dir
?dir
?ls
ls
ls()
clearPushBack()
clean
x <- 1
x
msg <- 'hello'
msg
msg <-
q
print(x)
print(msg)
msg
q <- 1:20
q
x <- vector()
x
x <- vector(1:3)
x <- vector('numeric', 5)
x
x <- vector('char', 5)
x <- vector('character', 5)
x
x <- vector('boolean', 5)
x <- vector('logical', 5)
x
y <- 9
y
typeof(y)
y <- 9L
typeof(y)
y <- "df"
typeof(y)
y <- TRUE
typeof(y)
1/0
0/0
typeof(6)
attributes(y)
attributes(6)
y <- c("a", TRUE)
y
y <- c(2, TRUE)
y
class(2)
typeof(2)
x <- vector(double, 55)
x <- vector('double', 55)
x
class(x)
x
as.logical(x)
as.character(x)
as.numeric(x)
as.integer(x)
as.complex(x)
x <- as.logical(x)
as.character(x)
x
x <- list(1, "a", TRUE, 1 + 4i)
x
m <- matrix(nrow = 2, ncol = 3)
m
m <- matrix(2, 4)
m
dim(m)
attributes(m)
m <- matrix(1:7, 2, 4)
m <- matrix(1:8, 2, 4)
m
m <- 1:10
dim(m) <- c(2,5)
m
nrow(m)
cbind(x,y)
x
y
x <- factor(c("yes", "yes", "no", "yes", "no"))
levels(x)
unclass(x)
y <- unclass(x)
clss(y)
class(y)
y
x
levels(x) <- c("yes", "no")
levels(x)
m <- c(1:3)
names(m)
m
names(m) <- c('cazo1','cazzo2','cazzo3')
m
1 + na
1 + NA
1 + NaN
R.version
install.packages("swirl")
packageVersion("swirl")
library(swirl)
ls()
rm(list=ls())
install_from_swirl("R Programming")
con <- url("https://map.mossvet.ru")
readLines(con)
x <- c("a", "v", "b", "e")
x[1]
x[0]
x[4]
x[1:2]
x$2
x[x >= "b"]
y <- x > "a"
x[y]
y
x <- list(a=[1:4], b=[1:100])
x <- list(a=1:4, b=1:100)
x
x$a
class(x$a)
x[[2]]
x[2]
x
x <- 4
class(x)
x <- 1:4
y <- 2
x + y
x <- c(1,1,1,1,1)
y <- c(0,1)
x+y
dir()
con <- read.csv("hw1_data.csv")
con
con[,6]
cnames(con)
con.attr
attr(con)
attributes(con)
con[,2]
con[2, ]
con[3, ]
con[1:2, ]
length(con)
rownames(con)
count(rownames(con))
sum(rownames(con))
con[-1:-2, ]
con[153:151, ]
con[153:152, ]
con[152:153, ]
con[47]["Ozone"]
con[[47]][["Ozone"]]
con[[47,]][[,"Ozone"]]
con[[47,]]
con[47,]
con[47,]["Ozone"]
con[,"Ozone"]
bad <- is.na(con[,"Ozone"])
bad
bad[bad is T]
bad[bad = T]
bad[isTRUE(bad])
isTRUE(bad]
bad[isTRUE(bad)]
isTRUE(bad)
bad[is.true(bad)]
isTRUE(con[,"Ozone"])
bad
names(bad)
bad <- as.factor(bad)
bad
arguments(bad)
names(bad)
lebels(bad)
levels(bad)
bad <- is.na(con[,"Ozone"])
length(bad)
length(bad[bad=TRUE])
length(x[bad])
mean(x[x!=bad])
mean(x[x != bad])
mean(x[!= bad])
y <- x[!= bad]
mean(x[!bad])
mean(x[bad])
x
x
mean(con[bad])
bad <- is.na(con[,"Ozone"])
mean(con[,"Ozone"][!bad])
sub <- con["Ozone">31]["Temp">90]
sub
sub <- con["Ozone">31 and "Temp">90]
sub1 <- con["Ozone">31]
sub2 <- sub1["Temp">90]
sub2
con["Ozone">31]
con[Ozone>31]
con[["Ozone">31]]
con[["Ozone">31]][["Temp">90]]
sub1 <- con[["Ozone">31]]
sub1
con$Ozone
con$Ozone > 5
con[Ozone > 5]
con$Ozone > 5
oz <- con$Ozone > 31
tmp <- con$Temp > 90
tmp
tmp + oz
tmp and oz
good <- complete.cases(oz, tmp)
good
tmp
oz
a <- tmp + oz
con2 <- con[a =2]
con2 <- con[a]
a
con
con[[Ozone > 31]]
con[["Ozone" > 31]]
con[["Ozone"]]
con[["Ozone"]] > 31
con$Ozone > 31
con$Ozone > 31 and con$Temp >90
con$Ozone > 31 && con$Temp >90
a1 <- con$Ozone > 31
a2 <- con$Temp > 90
a1 && a2
a1 & a2
con(a1 & a2)
con[a1 & a2]
con["Ozone"][a1 & a2]
con[,"Ozone"][a1 & a2]
con$Solar.R
mean(con$Solar.R[a1 & a2])
good <- not is.na(con$Ozone) & con$Ozone > 31
good <- is.na(con$Ozone) & con$Ozone > 31
good
a1 & a2
con[a1 & a2]
con[,][a1 & a2]
con[ Solar.R, ][a1 & a2]
con
con$Solar.R[a1 & a2]
bad <- is.na(con$Solar.R[a1 & a2])
bad
cazzo <- con$Solar.R[a1 & a2]
mean(cazzo[!bad])
con2 <- con[[,]]["Month" = 6]
con2 <- con[[,]][con$Month = 6]
con2 <- con[[,]]con$Month = 6
con$Month = 6
print(con$Month = 6)
bad <- is.na(con$Temp)
con$Temp[!bad]
con$Temp[bad]
bad <- is.na(con$Temp) & con$Month = 6
bad <- is.na(con$Temp) & con$Month == 6
bad
bad <- is.na(con$Temp) & con$Month !== 6
bad <- is.na(con$Temp) & con$Month != 6
bad
bad <- con$Month != 6
bad
clean
con
con$Month == 6
bad <- is.na(con$Temp) & con$Month != 6
bad
bad <- con$Month != 6
bad
bad <- is.na(con$Temp) | con$Month != 6
bad
bad <- is.na(con$Temp) | con$Month = 6
bad <- is.na(con$Temp) | con$Month == 6
bad
bad <- is.na(con$Temp)
bad
mean(con$Temp)
con
mean(con$Temp)
sum(con$Temp)
sum(con$Temp)/153
sum(con$Temp)/152
con <- read.csv("hw1_data.csv")
con
good <- con$Temp = 6
good <- con$Temp == 6
good
good <- con$Month == 6
good
mean(con$Temp)[good]
mean(con$Temp)
mean(con$Temp)[good]
mean(con$Temp)[!good]
mean(con$Temp[good])
good <- con$Month == 5
bad <- !is.na(con$Ozone)
bad
newgood <- bad & good
newgood
max(con$Ozone[newgood])
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getpwd()
getwd()
ls()
9 <- 9
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir = getwd()
getwd()
old.dir = "/home/vasyunin/projects/git/datasciencecoursera"
old.dir <- getwd()
dir.create("testdir")
setwd("testdir/")
file.create("mytest.R")
dir
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir()
dir.create(file.path"(folder1", "folder2"), T)
dir.create(file.path"(folder1", "folder2"), recursive=TRUE)
dir.create(file.path("folder1", "folder2"), recursive=TRUE)
dir.create(file.path('folder1', 'folder2'), recursive=TRUE)
dir.remove(file.path('folder1', 'folder2'), recursive=TRUE)
dir.create(file.path('folder1', 'folder2'), recursive=TRUE)
dir.create(file.path('folder2', 'folder3'), recursive=TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd('./')
dir()
setwd(old.dir)
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(1,20,by=0.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
seq(1,length(my_seq))
1:length(my_seq)
seq(along.with = my_seq)
play()
?along
?along.with
??along.with
nxt()
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), 10)
rep(c(0,1,2), times = 10)
rep(c(0, 1, 2), each = 10)
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[<1]
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Yaroslav")
my_name
paste(my_name, " ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[1,4,7]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
typeof(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colames(my_data) <- cnames
colnames(my_data) <- cnames
my_data
swirl()
2 *
55
